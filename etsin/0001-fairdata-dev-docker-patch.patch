From e6d70dc8fe9be0667361c9ad38fa76d6246e6697 Mon Sep 17 00:00:00 2001
From: Juhapekka Piiroinen <juhapekka.piiroinen@csc.fi>
Date: Mon, 10 Feb 2020 13:25:45 +0000
Subject: [PATCH] Fixed for local development.

---
 .gitignore                                         |  4 ++++
 ansible/install_requirements.sh                    |  2 +-
 .../inventories/local_development/group_vars/all   |  6 +++---
 ansible/provision_dataservers.yml                  |  4 +++-
 ansible/provision_webservers.yml                   |  2 ++
 ansible/roles/frontend/tasks/main.yml              |  3 ---
 ansible/roles/gunicorn/tasks/main.yml              |  6 +-----
 ansible/roles/memcached/tasks/main.yml             |  2 +-
 ansible/roles/nginx/tasks/main.yml                 |  2 +-
 ansible/roles/os-base/tasks/main.yml               | 16 +++++++--------
 ansible/roles/provision_search_app/tasks/main.yml  | 18 ++++++++--------
 ansible/roles/provision_web_app/tasks/main.yml     | 24 +++++++++++-----------
 ansible/roles/python/tasks/main.yml                |  7 +++++++
 13 files changed, 52 insertions(+), 44 deletions(-)

diff --git a/.gitignore b/.gitignore
index d922934..00222d9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -39,3 +39,7 @@ __pycache__
 .vscode
 
 faircentos
+*.orig
+*.rej
+
+*secrets*
diff --git a/ansible/install_requirements.sh b/ansible/install_requirements.sh
index c6062fe..be650d9 100644
--- a/ansible/install_requirements.sh
+++ b/ansible/install_requirements.sh
@@ -1 +1 @@
-ansible-galaxy -r requirements.yml install --roles-path=roles
+# ansible-galaxy -r requirements.yml install --roles-path=roles
diff --git a/ansible/inventories/local_development/group_vars/all b/ansible/inventories/local_development/group_vars/all
index b9c505c..12d6a24 100644
--- a/ansible/inventories/local_development/group_vars/all
+++ b/ansible/inventories/local_development/group_vars/all
@@ -2,7 +2,7 @@ web_app_base_path: "/etsin/{{ web_app_project_name }}"
 search_app_base_path: "/etsin/{{ search_app_project_name }}"
 
 webserver_1_internal_ip: 127.0.0.1
-dataserver_1_internal_ip: 127.0.0.1
+dataserver_1_internal_ip: elasticsearch.csc.local
 
 deployment_environment_id: local_development
 ssl_certificate_name: nginx-selfsigned.crt
@@ -46,12 +46,12 @@ elasticsearch_instance:
 
 elasticsearch:
   hosts:
-    - 127.0.0.1
+    - elasticsearch.csc.local
   port: 9200
   use_ssl: False
 
 metax_rabbitmq_hosts:
-  - 127.0.0.1
+  - rabbitmq.csc.local
 
 metax_rabbitmq:
   hosts: "{{ metax_rabbitmq_hosts }}"
diff --git a/ansible/provision_dataservers.yml b/ansible/provision_dataservers.yml
index 863d3fb..e0c4351 100644
--- a/ansible/provision_dataservers.yml
+++ b/ansible/provision_dataservers.yml
@@ -2,8 +2,10 @@
 
 - hosts: dataservers
   become: yes
+  environment:
+    PATH: /code/node-v12.13.1-linux-x64/bin:{{ ansible_env.PATH }}
   roles:
     - os-base
     - python
-    - elasticsearch
+#    - elasticsearch
     - provision_search_app
diff --git a/ansible/provision_webservers.yml b/ansible/provision_webservers.yml
index 6ec46f8..8e6f68e 100644
--- a/ansible/provision_webservers.yml
+++ b/ansible/provision_webservers.yml
@@ -2,6 +2,8 @@
 
 - hosts: webservers
   become: yes
+  environment:
+    PATH: /code/node-v12.13.1-linux-x64/bin:{{ ansible_env.PATH }}
   roles:
     - { role: os-base, when: "deployment_environment_id != 'local_development'" }
     - { role: python, when: "deployment_environment_id != 'local_development'" }
diff --git a/ansible/roles/frontend/tasks/main.yml b/ansible/roles/frontend/tasks/main.yml
index 8ccd332..39ef06a 100644
--- a/ansible/roles/frontend/tasks/main.yml
+++ b/ansible/roles/frontend/tasks/main.yml
@@ -4,7 +4,6 @@
     shell: npm prune
     become_user: "{{ app_user }}"
     args:
-      executable: /bin/bash
       chdir: "{{ web_app_frontend_path }}"
 
   - block:
@@ -19,14 +18,12 @@
         shell: npm install
         become_user: "{{ app_user }}"
         args:
-          executable: /bin/bash
           chdir: "{{ web_app_frontend_path }}"
 
       - name: Run frontend dev build for local development environment
         shell: npm run dev-build
         become_user: "{{ app_user }}"
         args:
-          executable: /bin/bash
           chdir: "{{ web_app_frontend_path }}"
 
     when: deployment_environment_id == 'local_development'
diff --git a/ansible/roles/gunicorn/tasks/main.yml b/ansible/roles/gunicorn/tasks/main.yml
index 06ad206..29627d2 100644
--- a/ansible/roles/gunicorn/tasks/main.yml
+++ b/ansible/roles/gunicorn/tasks/main.yml
@@ -24,10 +24,6 @@
     - name: Copy gunicorn service file
       template: src=templates/gunicorn.service dest=/usr/lib/systemd/system/gunicorn.service
 
-    - name: Systemctl daemon-reload
-      shell: "systemctl daemon-reload"
-
     - name: Restart gunicorn
-      service: name=gunicorn state=restarted enabled=yes
-
+      shell: systemctl enable gunicorn
   when: deployment_environment_id != 'local_development'
diff --git a/ansible/roles/memcached/tasks/main.yml b/ansible/roles/memcached/tasks/main.yml
index 1d78800..45679cf 100644
--- a/ansible/roles/memcached/tasks/main.yml
+++ b/ansible/roles/memcached/tasks/main.yml
@@ -2,4 +2,4 @@
   yum: name=memcached state=latest
 
 - name: Make sure Memcached is running
-  service: name=memcached enabled=yes state=started
+  shell: systemctl enable memcached
diff --git a/ansible/roles/nginx/tasks/main.yml b/ansible/roles/nginx/tasks/main.yml
index 2c3fbab..0d7c924 100644
--- a/ansible/roles/nginx/tasks/main.yml
+++ b/ansible/roles/nginx/tasks/main.yml
@@ -38,4 +38,4 @@
   with_items: "{{ nginx_es_credentials }}"
 
 - name: NGINX | Restart NGINX
-  service: name=nginx enabled=yes state=restarted
+  shell: systemctl enable nginx
diff --git a/ansible/roles/os-base/tasks/main.yml b/ansible/roles/os-base/tasks/main.yml
index 56f32a7..e1e237e 100644
--- a/ansible/roles/os-base/tasks/main.yml
+++ b/ansible/roles/os-base/tasks/main.yml
@@ -19,7 +19,7 @@
           - gcc
           - gcc-c++
           - python-devel
-          - git
+#          - git
           - curl
           - vim
           - zip
@@ -58,11 +58,11 @@
     state: started
     enabled: yes
 
-- name: Disable SELinux
-  selinux: state=permissive policy=targeted
+#- name: Disable SELinux
+#  selinux: state=permissive policy=targeted
 
-- name: Set locale LANG to en_US.UTF-8
-  shell: localectl set-locale LANG=en_US.UTF-8
+#- name: Set locale LANG to en_US.UTF-8
+#  shell: localectl set-locale LANG=en_US.UTF-8
 
 - name: Set default locale as LC_ALL to fi_FI.UTF-8
   lineinfile:
@@ -76,9 +76,9 @@
     state: present
     line: "LC_CTYPE=\"fi_FI.UTF-8\""
 
-- name: Set timezone to Europe/Helsinki
-  timezone:
-    name: Europe/Helsinki
+#- name: Set timezone to Europe/Helsinki
+#  timezone:
+#    name: Europe/Helsinki
 
 - include_role: name=users
 
diff --git a/ansible/roles/provision_search_app/tasks/main.yml b/ansible/roles/provision_search_app/tasks/main.yml
index a321e71..246b08c 100644
--- a/ansible/roles/provision_search_app/tasks/main.yml
+++ b/ansible/roles/provision_search_app/tasks/main.yml
@@ -8,15 +8,15 @@
   - name: Create folder {{ search_app_base_path }} for the search app
     file: path={{ search_app_base_path }} state=directory owner={{ app_user }} group=etsin mode=0755
 
-  - name: Clone project repo from branch {{ search_app_github_repo_branch }} to {{ search_app_base_path }}
-    git: repo={{ search_app_github_repo }} dest={{ search_app_base_path }} version={{ search_app_github_repo_branch }}
-    become_user: "{{ app_user }}"
-    ignore_errors: yes
-
-  - name: Update search app python package requirements to their latest versions
-    shell: pur --force --requirement {{ search_app_base_path }}/requirements.txt
-    become_user: "{{ app_user }}"
-    when: deployment_environment_id == 'local_development'
+#  - name: Clone project repo from branch {{ search_app_github_repo_branch }} to {{ search_app_base_path }}
+#    git: repo={{ search_app_github_repo }} dest={{ search_app_base_path }} version={{ search_app_github_repo_branch }}
+#    become_user: "{{ app_user }}"
+#    ignore_errors: yes
+
+#  - name: Update search app python package requirements to their latest versions
+#    shell: pur --force --requirement {{ search_app_base_path }}/requirements.txt
+#    become_user: "{{ app_user }}"
+#    when: deployment_environment_id == 'local_development'
 
   - name: Install search app python package requirements
     pip: requirements={{ search_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
diff --git a/ansible/roles/provision_web_app/tasks/main.yml b/ansible/roles/provision_web_app/tasks/main.yml
index bdcef4d..1b8381b 100644
--- a/ansible/roles/provision_web_app/tasks/main.yml
+++ b/ansible/roles/provision_web_app/tasks/main.yml
@@ -10,24 +10,24 @@
   - name: Create folder {{ web_app_base_path }} for the web app
     file: path={{ web_app_base_path }} state=directory owner={{ app_user }} group=etsin mode=0755
 
-  - name: Clone project repo from branch {{ web_app_github_repo_branch }} to {{ web_app_base_path }}
-    git: repo={{ web_app_github_repo }} dest={{ web_app_base_path }} version={{ web_app_github_repo_branch }}
-    become_user: "{{ app_user }}"
-    ignore_errors: yes
+#  - name: Clone project repo from branch {{ web_app_github_repo_branch }} to {{ web_app_base_path }}
+#    git: repo={{ web_app_github_repo }} dest={{ web_app_base_path }} version={{ web_app_github_repo_branch }}
+#    become_user: "{{ app_user }}"
+#    ignore_errors: yes
 
-  - name: Update app python package requirements to their latest versions
-    shell: pur --force --requirement {{ web_app_base_path }}/requirements.txt
-    become_user: "{{ app_user }}"
-    when: deployment_environment_id == 'local_development'
+#  - name: Update app python package requirements to their latest versions
+#    shell: pur --force --requirement {{ web_app_base_path }}/requirements.txt
+#    become_user: "{{ app_user }}"
+#    when: deployment_environment_id == 'local_development'
 
   - name: Install web app python package requirements
     pip: requirements={{ web_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
     become_user: "{{ app_user }}"
 
-  - name: Update app python test package requirements to their latest versions
-    shell: pur --force --requirement {{ web_app_base_path }}/test_requirements.txt
-    become_user: "{{ app_user }}"
-    when: deployment_environment_id == 'local_development'
+#  - name: Update app python test package requirements to their latest versions
+#    shell: pur --force --requirement {{ web_app_base_path }}/test_requirements.txt
+#    become_user: "{{ app_user }}"
+#    when: deployment_environment_id == 'local_development'
 
   - name: Install web app python test package requirements
     pip: requirements={{ web_app_base_path }}/test_requirements.txt virtualenv={{ python_virtualenv_path }}
diff --git a/ansible/roles/python/tasks/main.yml b/ansible/roles/python/tasks/main.yml
index ae761ff..abb3c1f 100644
--- a/ansible/roles/python/tasks/main.yml
+++ b/ansible/roles/python/tasks/main.yml
@@ -41,3 +41,10 @@
 - name: install wheel python package to enable using pip for installing requirements as {{ app_user }}
   pip: name=wheel virtualenv={{ python_virtualenv_path }}
   become_user: "{{ app_user }}"
+
+- name: Ensure latest pip in venv
+  pip:
+    name: pip
+    virtualenv: "{{ python_virtualenv_path }}"
+    state: latest
+  become_user: "{{ app_user }}"
-- 
1.8.3.1

